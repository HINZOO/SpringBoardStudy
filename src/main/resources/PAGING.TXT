1. 페이징은 쿼리의 맨뒤에 작성한다.
    1) 0번 인덱스 부터 총 5개(offset)를 보여주겠다.
    SELECT * FROM boards LIMIT 0,5

    2) 2번 페이지
    SELECT * FROM boards LIMIT 5,5
    ->2번 페이지

    3) n번 페이지
    -DESC : 내림차순정렬
    SELECT * FROM boards DESC LIMIT ((page-1)*5),5;

2. WHERE 절은 ORDER BY 안쪽
    1) 열 을 포함하고 있는 콘텐츠를 찾는 쿼리.
    SELECT * FORM boards WHERE  content like '%열%' ORDER BY update_time DESC;
    = 과 like >> like는 유사한것을 말한다. like가 되어야 열이 들어간 친구들을 찾는데 사실 이대로는 안되고
    %와일드 카드를 사용하여 작성해야 열이 들어간 글자를 찾을 수 있다.

    2) 4번째에 열이 오는 것을 찾기.
    SELECT * FORM boards WHERE  content like '___열%' ORDER BY update_time DESC;

    3) 안녕하세요가 앞에 오는 쿼리
    SELECT * FORM boards WHERE  content like '안녕하세요%' ORDER BY update_time DESC;

    4) 앞쪽에 작성태그 첫글자가 오는 쿼리
    SELECT * FROM hashtags WHERE tag like CONCAT(#{tag},'%');

    5) 일반 검색 쿼리 (+페이징)
    SELECT * FROM boards WHERE content like CONCAT ('%','열','%') ORDER BY update_time DESC LIMIT 0,5;
3)검색 쿼리 작성시 유의사항
    <select id="findAll" resultMap="BoardMap" parameterType="PageDto">
        SELECT * FROM boards ORDER BY ${order} ${direct} LIMIT #{startIndex},#{offset}
    </select>

    6) 서치필드가 있으면 서치해서 결과 진행.
        <select id="findAll" resultMap="BoardMap" parameterType="PageDto">
            SELECT
                * FROM boards
                <if test="searchField!=null and searchValue!=null"> /*다이나믹 쿼리*/
                    WHERE ${searchField} LIKE CONCAT('%',#{searchValue},'%')
                </if>
                  ORDER BY ${order} ${direct}
                  LIMIT #{startIndex},#{offset}
        </select>

3.페이지헬퍼 -> 페이징은 해주고 서치는 우리가 만들어야함.

        controller에서..
            PageHelper.startPage(1,5,"b_id DESC");
            PageInfo<BoardDto> pageBoards=new PageInfo<>(boards);
            model.addAttribute("boards",pageBoards); 해주면
            다음의 값들이 출력됨
            isFristPage, isLastPage, hasNextPage, navigatePages,navigateFirstPage,navigateLastPage,navigatePageNums=[]
            이때 addAttribute를 저렇게 같이 해버리면,어려움? 왜? =3=?

            PageHelper.startPage(1,5,"b_id DESC");//현재페이지/오프셋/orderby
                                                              //reasonable=true이면 페이지가 -1일때, 1번페이지로 취급해주는것.
            boards=boardService.list(loginUser);
            PageInfo<BoardDto> pageBoards=new PageInfo<>(boards);
            model.addAttribute("page",pageBoards);
            model.addAttribute("boards",boards);
            리스트라는이름으로 다음의 내용들이 상단에 넘어가서 보드에서 b:list 라고 명명해준다.
            list=Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=88, pages=18,//라스트페이지를 정할때 사용
            reasonable=true, pageSizeZero=false}
           -기본설정
           컨트롤러에서 이렇게 해줄때,
           PageHelper.startPage(6,5,"b_id DESC");
           보드의 다음설정이 넘어감.
            prePage=5, nextPage=7, isFirstPage=false, isLastPage=false,
            hasPreviousPage=true, hasNextPage=true,
            navigatePages=8,(현재 예시로는 15개의 페이지가 나오지만 그중 8개의 페이지가 눈에 보여진다.) navigateFirstPage=2, navigateLastPage=9,
            navigatepageNums=[2, 3, 4, 5, 6, 7, 8, 9]